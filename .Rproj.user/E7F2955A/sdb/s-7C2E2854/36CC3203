{
    "collab_server" : "",
    "contents" : "######################\n# Házi feladat 3.    #\n# Programozás I.     #\n# 2016/17. II. félév #\n# Nagy Szimonetta    #\n# 2017-03-25         #\n######################\n\n#II/1. Készíts egy listát, ami 5 vektort tartalmaz. Mindegyik vektor hossza \n#legyen egy véletlenszerű 10 és 20 közötti szám. A vektorok (1,2) intervallumon \n#egyenletes eloszlásból származzanak.\nl1 <- list(NULL)\nfor (i in 1:5) {\n  l1[i] <- list(c(runif(sample(10:20, 1), 1, 2))) \n}\nprint(l1)\nis.list(l1)\n\n#II/2. Nézd meg for ciklussal, hogy az előbb létrehozott listának milyen \n#hosszúak az elemei! A végeredmény legyen egy vektor.\nv1 <- vector(\"numeric\", 5)\nfor (i in 1:5) {\n  v1[i] <- c(length(l1[[i]]))\n}\nprint(v1)\nis.vector(v1)\n\n#II/3. Nézd meg az apply függvénycsalád egy tagjával, hogy a listának milyen \n#hosszúak az elemei! A végeredmény legyen egy lista.\nl2 <- lapply(l1, FUN = length)\nprint(l2)\nis.list(l2)\n\n#II/4. Nézd meg az apply függvénycsalád egy tagjával, hogy a listának milyen \n#hosszúak az elemei! A végeredmény legyen egy vektor.\nl3 <- sapply(l1, FUN = length)\nprint(l3)\nis.vector(l3)\n#FELADAT VÉGE-------------------------------------------------------------------\n\n#III/1. Hívd be a chickwts datasetet, amit az R alapból tartalmaz.\nchickwts\nView(chickwts)\n\n#III/2. Nézd meg, mennyi az átlagsúlya a különbözőképp táplált csirkéknek! \n#Használd az aggregate függvényt!\nwts_mean <- aggregate(chickwts$weight~chickwts$feed, chickwts, \n                                 FUN=mean, simplify = T)\nView(wts_mean)\n\n\n#III/3. Az előbb kapott aggregált data frame-et rendezd az átlagsúly szerint \n#csökkenő sorrendbe!\nis.data.frame(wts_mean)\nstulevel <- stulevel[order(stulevel$ability) , ]\nwts_mean_ordered <- wts_mean[order(wts_mean$`chickwts$weight`, decreasing = T), \n                             ]\nView(wts_mean_ordered)\n#FELADAT VÉGE-------------------------------------------------------------------\n\n#IV/1. Hozz létre egy 50 soros, 10 oszlopos mátrixot, aminek az értékei normális \n#eloszlásból származnak. Minden sor szórása legyen egyenlő a sor számával.\nm1 <- matrix(data = NA, 50, 10)\nfor (i in 1:50) {\n  m1[i, ] <- c(rnorm(n = 10, mean = 0, sd = i))\n}\nView(m1)\n\n#IV/2. Számold ki for ciklussal minden sor szórását! A végeredmény legyen egy \n#vektor.\nv2 <- vector(\"numeric\", 50)\nfor (i in 1:50) {\n  v2[i] <- sd(m1[i, ])\n}\nv2\nis.vector(v2)\n\n#IV/3. Számold ki az apply függvénycsalád egy tagjával minden sor szórását! \n#A végeredmény legyen egy vektor.\nv3 <- apply(m1, 1, sd)\nv3\nis.vector(v3)\n\n#IV/4. Normalizáld a mátrix értékeit -1-től 1-ig tartó intervallumra és nézd \n#meg a sorok átlagát!\nm2 <- matrix(NA, 50, 10)\nfor (i in 1:50) {\n  j <- c(1:10)\n  average <- apply(m1, 1, mean)\n  deviation <- apply(m1, 1, sd)\n  m2[i, j] <- (m1[i, j]-average[i])/deviation[i]\n  rm(average, deviation, j)\n}\nView(m2)\nv4 <- apply(m2, 1, mean)\nv4\n#FELADAT VÉGE-------------------------------------------------------------------\n",
    "created" : 1490469403164.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3627702888",
    "id" : "36CC3203",
    "lastKnownWriteTime" : 1490524519,
    "last_content_update" : 1490524519142,
    "path" : "D:/Rprogramozás/homework-03/src/homework-03.R",
    "project_path" : "src/homework-03.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}